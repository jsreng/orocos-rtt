INCLUDE (${PROJ_SOURCE_DIR}/config/TaoIDL.cmake)
INCLUDE (${PROJ_SOURCE_DIR}/config/DependentOption.cmake)

#this option was set in global_rules.cmake
IF(ENABLE_CORBA)
  MESSAGE( "CORBA Support enabled.")
  # Finally:

  INCLUDE (${PROJ_SOURCE_DIR}/config/UseCorba.cmake)

  # used for building the library
  FOREACH(INC ${ORO_ACETAO_INCLUDE_DIRS} )
	SET(INC_LIST "${INC_LIST} -I${INC}")
  ENDFOREACH(INC ${ORO_ACETAO_INCLUDE_DIRS} )

  LINK_LIBRARIES( ${ORO_ACETAO_LIBRARIES} )
  FOREACH(LIB ${ORO_ACETAO_LIBRARIES} )
	SET(LIB_LIST "${LIB_LIST} -l${LIB}")
  ENDFOREACH(LIB ${ORO_ACETAO_LIBRARIES} )

  SET(RTT_CORBA_CFLAGS "${ORO_ACETAO_DEFINITIONS} ${INC_LIST}" CACHE INTERNAL "")
  IF (ORO_ACETAO_LIBRARY_PATH)
    SET(RTT_CORBA_LINKFLAGS "-L${ORO_ACETAO_LIBRARY_PATH} ${LIB_LIST}" CACHE INTERNAL "")
  ELSE (ORO_ACETAO_LIBRARY_PATH)
    SET(RTT_CORBA_LINKFLAGS "${LIB_LIST}" CACHE INTERNAL "")
  ENDIF (ORO_ACETAO_LIBRARY_PATH)


  FILE( GLOB IDLS [^.]*.idl )
  FILE( GLOB CPPS [^.]*.cpp )
  FILE( GLOB HPPS [^.]*.hpp [^.]*.h [^.]*.inl)

  # exclude some files:
  LIST( REMOVE_ITEM HPPS CorbaDataObject.hpp CorbaBuffer.hpp)

  ORO_ADD_CORBA_SERVERS(CPPS HPPS ${IDLS} )
  SET( ENV{GLOBAL_GENERATED_SRCS} "${CPPS}" )

  #This has been added in order to generate files before make -j<N>
  # make -j<N> causes corruption of generated files because of overwriting
  ADD_CUSTOM_TARGET( idl DEPENDS ${CPPS} ${HPPS} COMMENT "Generating sources from .idl files")

  #MESSAGE("CPPS: $ENV{GLOBAL_GENERATED_SRCS}")
  #MESSAGE("HPPS: ${HPPS}")
  GLOBAL_ADD_INCLUDE( rtt/corba ${HPPS})
  #GLOBAL_ADD_SRC( ${CPPS} )
  INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_BINARY_DIR} )

IF ( BUILD_STATIC )
  ADD_LIBRARY(orocos-rtt-corba_static-${OROCOS_TARGET} STATIC ${CPPS})
  SET_TARGET_PROPERTIES( orocos-rtt-corba_static-${OROCOS_TARGET} 
  PROPERTIES DEFINE_SYMBOL "RTT_DLL_EXPORT"
  OUTPUT_NAME orocos-rtt-corba-${OROCOS_TARGET}
  CLEAN_DIRECT_OUTPUT 1
  VERSION "${RTT_VERSION}"
  COMPILE_FLAGS "${CMAKE_CXX_FLAGS_ADD} ${RTT_CFLAGS} ${RTT_CORBA_CFLAGS} -D_REENTRANT -DOROCOS_TARGET=${OROCOS_TARGET}" )
ENDIF( BUILD_STATIC )

  ADD_LIBRARY(orocos-rtt-corba_dynamic-${OROCOS_TARGET} SHARED ${CPPS})
  TARGET_LINK_LIBRARIES(orocos-rtt-corba_dynamic-${OROCOS_TARGET} 
	orocos-rtt-dynamic_${OROCOS_TARGET} 
	) 
  SET_TARGET_PROPERTIES( orocos-rtt-corba_dynamic-${OROCOS_TARGET} PROPERTIES
  DEFINE_SYMBOL "RTT_DLL_EXPORT"
  OUTPUT_NAME orocos-rtt-corba-${OROCOS_TARGET}
  CLEAN_DIRECT_OUTPUT 1
  COMPILE_FLAGS "${CMAKE_CXX_FLAGS_ADD} ${RTT_CFLAGS} ${RTT_CORBA_CFLAGS} -D_REENTRANT -DOROCOS_TARGET=${OROCOS_TARGET}"
  SOVERSION "${RTT_VERSION_MAJOR}.${RTT_VERSION_MINOR}"
  VERSION "${RTT_VERSION}")


CONFIGURE_FILE( ${PROJ_SOURCE_DIR}/src/corba/orocos-rtt-corba.pc.in ${PROJ_BINARY_DIR}/src/corba/orocos-rtt-corba-${OROCOS_TARGET}.pc @ONLY)

IF ( BUILD_STATIC )
  INSTALL_TARGETS(/lib orocos-rtt-corba_static-${OROCOS_TARGET})
ENDIF( BUILD_STATIC )

  INSTALL_TARGETS(/lib orocos-rtt-corba_dynamic-${OROCOS_TARGET})
  INSTALL_FILES( /lib/pkgconfig FILES orocos-rtt-corba-${OROCOS_TARGET}.pc)

ENDIF(ENABLE_CORBA)
